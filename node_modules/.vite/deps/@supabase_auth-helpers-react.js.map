{
  "version": 3,
  "sources": ["../../@supabase/auth-helpers-react/src/index.tsx", "../../@supabase/auth-helpers-react/src/components/SessionContext.tsx"],
  "sourcesContent": ["// Types\nexport type { Session, User, SupabaseClient } from '@supabase/supabase-js';\n\n// Methods & Components\nexport * from './components/SessionContext';\n", "import { AuthError, Session, SupabaseClient } from '@supabase/supabase-js';\nimport React, {\n\tcreateContext,\n\tPropsWithChildren,\n\tuseContext,\n\tuseEffect,\n\tuseMemo,\n\tuseState\n} from 'react';\n\nexport type SessionContext =\n\t| {\n\t\t\tisLoading: true;\n\t\t\tsession: null;\n\t\t\terror: null;\n\t\t\tsupabaseClient: SupabaseClient;\n\t  }\n\t| {\n\t\t\tisLoading: false;\n\t\t\tsession: Session;\n\t\t\terror: null;\n\t\t\tsupabaseClient: SupabaseClient;\n\t  }\n\t| {\n\t\t\tisLoading: false;\n\t\t\tsession: null;\n\t\t\terror: AuthError;\n\t\t\tsupabaseClient: SupabaseClient;\n\t  }\n\t| {\n\t\t\tisLoading: false;\n\t\t\tsession: null;\n\t\t\terror: null;\n\t\t\tsupabaseClient: SupabaseClient;\n\t  };\n\nconst SessionContext = createContext<SessionContext>({\n\tisLoading: true,\n\tsession: null,\n\terror: null,\n\tsupabaseClient: {} as any\n});\n\nexport interface SessionContextProviderProps {\n\tsupabaseClient: SupabaseClient;\n\tinitialSession?: Session | null;\n}\n\nexport const SessionContextProvider = ({\n\tsupabaseClient,\n\tinitialSession = null,\n\tchildren\n}: PropsWithChildren<SessionContextProviderProps>) => {\n\tconst [session, setSession] = useState<Session | null>(initialSession);\n\tconst [isLoading, setIsLoading] = useState<boolean>(!initialSession);\n\tconst [error, setError] = useState<AuthError>();\n\n\tuseEffect(() => {\n\t\tif (!session && initialSession) {\n\t\t\tsetSession(initialSession);\n\t\t}\n\t}, [session, initialSession]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\n\t\tasync function getSession() {\n\t\t\tconst {\n\t\t\t\tdata: { session },\n\t\t\t\terror\n\t\t\t} = await supabaseClient.auth.getSession();\n\n\t\t\t// only update the react state if the component is still mounted\n\t\t\tif (mounted) {\n\t\t\t\tif (error) {\n\t\t\t\t\tsetError(error);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetSession(session);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t}\n\n\t\tgetSession();\n\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tdata: { subscription }\n\t\t} = supabaseClient.auth.onAuthStateChange((event, session) => {\n\t\t\tif (session && (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED' || event === 'USER_UPDATED')) {\n\t\t\t\tsetSession(session);\n\t\t\t}\n\n\t\t\tif (event === 'SIGNED_OUT') {\n\t\t\t\tsetSession(null);\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tsubscription.unsubscribe();\n\t\t};\n\t}, []);\n\n\tconst value: SessionContext = useMemo(() => {\n\t\tif (isLoading) {\n\t\t\treturn {\n\t\t\t\tisLoading: true,\n\t\t\t\tsession: null,\n\t\t\t\terror: null,\n\t\t\t\tsupabaseClient\n\t\t\t};\n\t\t}\n\n\t\tif (error) {\n\t\t\treturn {\n\t\t\t\tisLoading: false,\n\t\t\t\tsession: null,\n\t\t\t\terror,\n\t\t\t\tsupabaseClient\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tisLoading: false,\n\t\t\tsession,\n\t\t\terror: null,\n\t\t\tsupabaseClient\n\t\t};\n\t}, [isLoading, session, error]);\n\n\treturn <SessionContext.Provider value={value}>{children}</SessionContext.Provider>;\n};\n\nexport const useSessionContext = () => {\n\tconst context = useContext(SessionContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useSessionContext must be used within a SessionContextProvider.`);\n\t}\n\n\treturn context;\n};\n\nexport function useSupabaseClient<\n\tDatabase = any,\n\tSchemaName extends string & keyof Database = 'public' extends keyof Database\n\t\t? 'public'\n\t\t: string & keyof Database\n>() {\n\tconst context = useContext(SessionContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useSupabaseClient must be used within a SessionContextProvider.`);\n\t}\n\n\treturn context.supabaseClient as SupabaseClient<Database, SchemaName>;\n}\n\nexport const useSession = () => {\n\tconst context = useContext(SessionContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useSession must be used within a SessionContextProvider.`);\n\t}\n\n\treturn context.session;\n};\n\nexport const useUser = () => {\n\tconst context = useContext(SessionContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useUser must be used within a SessionContextProvider.`);\n\t}\n\n\treturn context.session?.user ?? null;\n};\n"],
  "mappings": "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",
  "names": ["session", "error"]
}
